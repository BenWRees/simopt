import unittest
import math

from simopt.experiment_base import ProblemSolver, post_normalize

# Note: Tests have inherent randomness and may vary **slightly** between
#       runs/systems. To make sure these tsts still work, assertAlmostEqual
#       is used instead of assertEqual.
#       Some attributes, such as the lengths of lists, are still checked
#       with assertEqual as these should not change between runs.

class test_DYNAMNEWS1_SPSA(unittest.TestCase):
    def setUp(self):
        # Expected values
        self.expected_problem_name = "DYNAMNEWS-1"
        self.expected_solver_name = "SPSA"
        self.expected_all_recommended_xs = "[[(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (2.6000000000198953, 3.3999999999801047, 2.6000000000198953, 2.6000000000198953, 2.6000000000198953, 2.6000000000198953, 2.6000000000198953, 2.6000000000198953, 2.6000000000198953, 2.6000000000198953), (2.6737517358138443, 3.3262482641861557, 2.6737517358138443, 2.5262482642259463, 2.6737517358138443, 2.6737517358138443, 2.5262482642259463, 2.5262482642259463, 2.5262482642259463, 2.5262482642259463), (2.613925609038426, 3.2664221374107374, 2.613925609038426, 2.466422137450528, 2.613925609038426, 2.613925609038426, 2.5860743910013646, 2.5860743910013646, 2.5860743910013646, 2.5860743910013646), (2.5120099995732796, 3.164506527945591, 2.7158412185035723, 2.5683377469156743, 2.5120099995732796, 2.5120099995732796, 2.4841587815362183, 2.4841587815362183, 2.4841587815362183, 2.687990000466511), (2.556741295892894, 3.119775231625977, 2.671109922183958, 2.6130690432352885, 2.4672787032536654, 2.556741295892894, 2.439427485216604, 2.439427485216604, 2.5288900778558325, 2.6432587041468967), (2.5968210652059005, 3.07969546231297, 2.6310301528709514, 2.653148812548295, 2.4271989339406588, 2.5166615265798873, 2.3993477159035974, 2.3993477159035974, 2.568969847168839, 2.6833384734599033), (2.5632920337260447, 3.0461664308331144, 2.664559184350807, 2.6866778440268897, 2.4607279654205145, 2.4831324951012927, 2.365818684425003, 2.3658186844237417, 2.6024988786474337, 2.6498094419813087), (2.594408914434495, 3.0772833115415645, 2.633442303642357, 2.6555609633184396, 2.4918448461289646, 2.4520156143928427, 2.396935565133453, 2.3347018037152916, 2.5713819979389836, 2.6186925612728587), (2.5071493909740403, 2.99002378808111, 2.5461827801819026, 2.742820486778894, 2.40458532266851, 2.364756090932388, 2.4841950885939075, 2.247442280254837, 2.484122474478529, 2.531433037812404), (2.479799313475589, 3.0173738655795614, 2.573532857680354, 2.7701705642773455, 2.3772352451700587, 2.3374060134339367, 2.456845011095456, 2.2200922027563856, 2.5114725519769805, 2.5040829603139527), (2.4281087358571543, 2.965683287961127, 2.6252234352987887, 2.718479986658911, 2.325544667551624, 2.285715435815502, 2.4051544334770214, 2.2717827803748203, 2.563163129595415, 2.452392382695518), (2.451468742479643, 2.942323281338638, 2.6485834419212773, 2.7418399932813995, 2.3021846609291354, 2.2623554291930135, 2.381794426854533, 2.295142786997309, 2.5398031229729265, 2.4290323760730295), (2.451468742479643, 2.942323281338638, 2.6485834419212773, 2.7418399932813995, 2.3021846609291354, 2.2623554291930135, 2.381794426854533, 2.295142786997309, 2.5398031229729265, 2.4290323760730295)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (2.8000000000099474, 2.8000000000099474, 3.1999999999900526, 2.8000000000099474, 3.1999999999900526, 2.8000000000099474, 2.8000000000099474, 2.8000000000099474, 3.1999999999900526, 2.8000000000099474), (2.7262482642193704, 2.8737517358005245, 3.2737517357806296, 2.8737517358005245, 3.1262482641994755, 2.7262482642193704, 2.7262482642193704, 2.7262482642193704, 3.1262482641994755, 2.8737517358005245), (2.5467698838907404, 2.6942733554718945, 3.0942733554519997, 3.0532301161291544, 3.3057266445281055, 2.5467698838907404, 2.5467698838907404, 2.5467698838907404, 2.9467698838708456, 2.6942733554718945), (2.5467698838915735, 2.6942733554727276, 3.0942733554528328, 3.0532301161299875, 3.3057266445272724, 2.5467698838899073, 2.5467698838899073, 2.5467698838899073, 2.9467698838716787, 2.6942733554710614), (2.636232476533794, 2.6048107628305073, 3.0048107628106124, 3.142692708772208, 3.216264051885052, 2.6362324765321277, 2.457307291247687, 2.457307291247687, 2.8573072912294584, 2.604810762828841), (2.5560729379084637, 2.524651224205177, 2.9246512241852822, 3.0625331701468776, 3.2964235905103823, 2.5560729379067975, 2.377147752622357, 2.537466829873017, 2.777147752604128, 2.6849703014541713), (2.5925242471743113, 2.5611025334710247, 2.96110253345113, 3.0989844794127253, 3.2599722812445346, 2.51962162864095, 2.340696443356509, 2.5010155206071696, 2.7406964433382806, 2.6485189921883237), (2.5589952156974376, 2.5946315649478984, 2.9946315649280035, 3.0654554479358516, 3.226443249767661, 2.5531506601178235, 2.3071674118796355, 2.467486489130296, 2.707167411861407, 2.6820480236651973), (2.5589952156974376, 2.5946315649478984, 2.9946315649280035, 3.0654554479358516, 3.226443249767661, 2.5531506601178235, 2.3071674118796355, 2.467486489130296, 2.707167411861407, 2.6820480236651973), (2.47173569223594, 2.5073720414864007, 2.907372041466506, 2.978195924474354, 3.3137027732291586, 2.465891136656326, 2.219907888418138, 2.380226965668798, 2.7944269353229045, 2.5947885002036997), (2.4990857697343913, 2.4800219639879493, 2.8800219639680544, 2.9508458469759025, 3.34105285072761, 2.4932412141547773, 2.1925578109196864, 2.4075770431672496, 2.767076857824453, 2.5674384227052482), (2.4732404809254103, 2.454176675178968, 2.8541766751590734, 2.9250005581669214, 3.366898139536591, 2.5190865029637584, 2.1667125221107053, 2.4334223319762307, 2.792922146633434, 2.541593133896267), (2.4977671081855672, 2.478703302439125, 2.8787033024192303, 2.9004739309067644, 3.342371512276434, 2.5436131302239153, 2.1421858948505483, 2.4088957047160737, 2.768395519373277, 2.51706650663611), (2.4276870883224353, 2.4086232825759932, 2.9487833222823623, 2.8303939110436325, 3.412451532139566, 2.4735331103607834, 2.0721058749874164, 2.338815684852942, 2.6983154995101453, 2.4469864867729783), (2.4276870883224353, 2.4086232825759932, 2.9487833222823623, 2.8303939110436325, 3.412451532139566, 2.4735331103607834, 2.0721058749874164, 2.338815684852942, 2.6983154995101453, 2.4469864867729783)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (2.8000000000099474, 2.8000000000099474, 2.8000000000099474, 3.1999999999900526, 3.1999999999900526, 2.8000000000099474, 2.8000000000099474, 2.8000000000099474, 2.8000000000099474, 3.1999999999900526), (2.8737517358005245, 2.7262482642193704, 2.8737517358005245, 3.1262482641994755, 3.1262482641994755, 2.7262482642193704, 2.7262482642193704, 2.8737517358005245, 2.7262482642193704, 3.2737517357806296), (2.933577862576418, 2.666422137443477, 2.933577862576418, 3.066422137423582, 3.186074390975369, 2.666422137443477, 2.666422137443477, 2.813925609024631, 2.786074390995264, 3.213925609004736), (3.035493472040315, 2.56450652797958, 2.831662253112521, 2.964506527959685, 3.287990000439266, 2.56450652797958, 2.56450652797958, 2.915841218488528, 2.6841587815313668, 3.112009999540839), (2.990762175718457, 2.5197752316577215, 2.876393549434379, 2.9197752316378267, 3.3327212967611244, 2.5197752316577215, 2.5197752316577215, 2.9605725148103863, 2.6394274852095085, 3.1567412958626972), (3.030841945031122, 2.5598550009703867, 2.836313780121714, 2.8796954623251616, 3.3728010660737895, 2.4796954623450564, 2.5598550009703867, 2.920492745497721, 2.5993477158968434, 3.116661526550032), (2.957939326501949, 2.486952382441214, 2.9092163986508868, 2.9525980808543344, 3.4457036846029623, 2.4067928438158837, 2.486952382441214, 2.8475901269685484, 2.5264450973676706, 3.0437589080208594), (2.924410295023312, 2.4534233509625767, 2.942745430129524, 2.9861271123329716, 3.412174653124325, 2.440321875294521, 2.4534233509625767, 2.8811191584471856, 2.4929160658890335, 3.010229876542222), (2.8371507715618143, 2.366163827501079, 2.8554859066680263, 3.0733866357944692, 3.3249151296628274, 2.353062351833023, 2.366163827501079, 2.793859634985688, 2.405656542427536, 3.09748940000372), (2.8918509265587176, 2.3114636725041757, 2.9101860616649295, 3.1280867907913725, 3.270214974665924, 2.29836219683612, 2.3114636725041757, 2.7391594799887846, 2.3509563874306325, 3.0427892450068166), (2.8684909199383775, 2.2881036658838356, 2.8868260550445894, 3.1047267841710324, 3.2935749812862642, 2.2750021902157798, 2.334823679124516, 2.7625194866091247, 2.3275963808111957, 3.0661492516271567), (2.8684909199383775, 2.2881036658838356, 2.8868260550445894, 3.1047267841710324, 3.2935749812862642, 2.2750021902157798, 2.334823679124516, 2.7625194866091247, 2.3275963808111957, 3.0661492516271567)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.1999999999900526, 2.8000000000099474, 2.8000000000099474, 2.8000000000099474, 2.8000000000099474, 2.8000000000099474, 2.8000000000099474, 3.1999999999900526, 3.1999999999900526, 2.8000000000099474), (3.1262482641994755, 2.8737517358005245, 2.7262482642193704, 2.7262482642193704, 2.7262482642193704, 2.7262482642193704, 2.8737517358005245, 3.2737517357806296, 3.1262482641994755, 2.8737517358005245), (3.186074390974419, 2.933577862575468, 2.666422137444427, 2.666422137444427, 2.786074390994314, 2.666422137444427, 2.813925609025581, 3.333577862555573, 3.066422137424532, 2.813925609025581), (3.2370321957053263, 2.984535667306375, 2.6154643327135196, 2.717379942175334, 2.735116586263407, 2.6154643327135196, 2.864883413756488, 3.282620057824666, 3.015464332693625, 2.7629678042946737), (3.192300899385712, 2.939804370986761, 2.5707330363939054, 2.6726486458557197, 2.779847882583021, 2.660195629033134, 2.9096147100761023, 3.237888761505052, 3.060195629013239, 2.7182365079750594), (3.1121413607600403, 2.8596448323610892, 2.4905734977682337, 2.592489107230048, 2.6996883439573494, 2.580036090407462, 2.989774248701774, 3.3180483001307235, 2.9800360903875673, 2.798396046600731), (3.1485926700255726, 2.823193523095557, 2.4541221885027014, 2.6289404164955803, 2.663237034691817, 2.54358478114193, 2.9533229394362417, 3.354499609396256, 2.943584781122035, 2.8348473558662635), (3.090419654385791, 2.7650205074557754, 2.39594917286292, 2.570767400855799, 2.6050640190520356, 2.4854117655021484, 3.011495955076023, 3.4126726250360373, 3.0017577967618165, 2.776674340226482), (3.0357194993883927, 2.710320352458377, 2.4506493278603183, 2.5160672458584004, 2.550363864054637, 2.43071161050475, 3.0661961100734216, 3.4673727800334357, 2.947057641764418, 2.7219741852290835), (3.0615647881973738, 2.736165641267358, 2.4248040390513372, 2.4902219570494193, 2.524518575245656, 2.456556899313731, 3.0920413988824027, 3.4415274912244547, 2.921212352955437, 2.6961288964201024), (3.037038160936765, 2.7606922685279667, 2.449330666311946, 2.4656953297888107, 2.5490452025062647, 2.4810835265743396, 3.067514771621794, 3.417000863963846, 2.8966857256948284, 2.671602269159494), (3.037038160936765, 2.7606922685279667, 2.449330666311946, 2.4656953297888107, 2.5490452025062647, 2.4810835265743396, 3.067514771621794, 3.417000863963846, 2.8966857256948284, 2.671602269159494), (3.037038160936765, 2.7606922685279667, 2.449330666311946, 2.4656953297888107, 2.5490452025062647, 2.4810835265743396, 3.067514771621794, 3.417000863963846, 2.8966857256948284, 2.671602269159494)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.1, 3.1, 2.9, 2.9, 3.1, 2.9, 2.9, 2.9, 2.9, 3.1), (2.9524965284132256, 2.9524965284132256, 2.7524965284132255, 3.0475034715867744, 3.2475034715867745, 2.7524965284132255, 2.7524965284132255, 3.0475034715867744, 2.7524965284132255, 2.9524965284132256), (3.0721487819664373, 2.832844274860014, 2.632844274860014, 2.9278512180335627, 3.127851218033563, 2.632844274860014, 2.632844274860014, 2.9278512180335627, 2.872148781966437, 3.0721487819664373), (2.937954892999741, 2.96703816382671, 2.498650385893318, 3.062045107000259, 2.993657329066867, 2.498650385893318, 2.498650385893318, 2.7936573290668667, 2.737954892999741, 2.937954892999741), (3.018114431622341, 3.04719770244931, 2.5788099245159177, 2.981885568377659, 2.913497790444267, 2.418490847270718, 2.418490847270718, 2.7134977904442668, 2.657795354377141, 2.8577953543771413), (3.091017050151514, 2.974295083920137, 2.505907305986745, 2.908982949848486, 2.9864004089734397, 2.345588228741545, 2.4913934657998906, 2.640595171915094, 2.5848927358479683, 2.7848927358479685), (3.023958987196591, 2.9072370209652143, 2.438849243031822, 2.841924886893563, 2.919342346018517, 2.412646291696468, 2.4243354028449677, 2.573537108960171, 2.651950798802891, 2.8519507988028914), (2.992842106488141, 2.9383539016736644, 2.469966123740272, 2.810808006185113, 2.8882254653100667, 2.381529410988018, 2.455452283553418, 2.542420228251721, 2.6830676795113413, 2.8208339180944413), (2.9346690908478377, 2.9965269173139677, 2.411793108099969, 2.7526349905448098, 2.8300524496697634, 2.3233563953477145, 2.513625299193721, 2.4842472126114177, 2.7412406951516446, 2.762660902454138), (2.8526188583534733, 2.9144766848196033, 2.3297428756056044, 2.6705847580504454, 2.748002217175399, 2.405406627842079, 2.4315750666993567, 2.4021969801170533, 2.65919046265728, 2.8447111349485024), (2.8009282807340945, 2.966167262438982, 2.2780522979862257, 2.6188941804310666, 2.6963116395560203, 2.3537160502227, 2.379884489079978, 2.453887557736432, 2.6074998850379014, 2.896401712567881), (2.776401653473486, 2.9906938896995907, 2.3025789252468343, 2.594367553170458, 2.720838266816629, 2.3291894229620915, 2.3553578618193693, 2.4293609304758235, 2.582973257777293, 2.9209283398284898), (2.776401653473486, 2.9906938896995907, 2.3025789252468343, 2.594367553170458, 2.720838266816629, 2.3291894229620915, 2.3553578618193693, 2.4293609304758235, 2.582973257777293, 2.9209283398284898)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.1, 2.9, 2.9, 3.1, 3.1, 2.9, 2.9, 2.9, 2.9, 3.1), (2.9524965284132256, 2.7524965284132255, 2.7524965284132255, 2.9524965284132256, 2.9524965284132256, 3.0475034715867744, 3.0475034715867744, 2.7524965284132255, 3.0475034715867744, 2.9524965284132256), (2.8328442748628637, 2.6328442748628635, 2.8721487819635874, 2.8328442748628637, 2.8328442748628637, 2.9278512180364125, 2.9278512180364125, 2.8721487819635874, 2.9278512180364125, 3.0721487819635875), (2.9347598843275935, 2.7347598843275933, 2.7702331724988576, 2.730928665398134, 2.730928665398134, 3.0297668275011422, 2.8259356085716827, 2.7702331724988576, 2.8259356085716827, 2.9702331724988578), (2.9748396536406, 2.6946801150145867, 2.730153403185851, 2.7710084347111406, 2.6908488960851273, 2.9896870581881356, 2.785855839258676, 2.730153403185851, 2.8660153778846893, 3.0103129418118644), (2.9077815906850892, 2.627622052059076, 2.66309534023034, 2.8380664976666514, 2.757906959040638, 2.9226289952326248, 2.718797776303165, 2.797211466141362, 2.7989573149291784, 2.9432548788563535), (2.84554782926598, 2.689855813478185, 2.725329101649449, 2.7758327362475423, 2.695673197621529, 2.984862756651734, 2.656564014884056, 2.7349777047222528, 2.7367235535100694, 2.8810211174372444), (2.8728979067649267, 2.7172058909771315, 2.6979790241505026, 2.7484826587485958, 2.6683231201225825, 2.9575126791527873, 2.6839140923830027, 2.707627627223306, 2.7093734760111228, 2.908371194936191), (2.8470526179559457, 2.7430511797861126, 2.7238243129594837, 2.7226373699396147, 2.6424778313136015, 2.931667390343806, 2.6580688035740216, 2.7334729160322873, 2.6835281872021417, 2.934216483745172), (2.8225259906975952, 2.767577807044463, 2.6992976857011333, 2.6981107426812643, 2.617951204055251, 2.9071407630854558, 2.682595430832372, 2.708946288773937, 2.708054814460492, 2.9587431110035225), (2.775805977456085, 2.720857793802953, 2.7460176989426435, 2.651390729439754, 2.571231190813741, 2.8604207498439456, 2.635875417590862, 2.755666302015447, 2.661334801218982, 3.0054631242450327), (2.775805977456085, 2.720857793802953, 2.7460176989426435, 2.651390729439754, 2.571231190813741, 2.8604207498439456, 2.635875417590862, 2.755666302015447, 2.661334801218982, 3.0054631242450327)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (2.9, 2.9, 2.9, 3.1, 2.9, 2.9, 2.9, 3.1, 2.9, 3.1), (2.8262482642029445, 2.9737517357970553, 2.9737517357970553, 3.0262482642029447, 2.8262482642029445, 2.8262482642029445, 2.8262482642029445, 3.1737517357970555, 2.8262482642029445, 3.0262482642029447), (2.886074390981101, 2.9139256090188987, 2.9139256090188987, 2.966422137424788, 2.886074390981101, 2.766422137424788, 2.766422137424788, 3.113925609018899, 2.766422137424788, 3.0860743909811013), (2.860595488614172, 2.8884467066519695, 2.8884467066519695, 2.9919010397917174, 2.9115532933480304, 2.791901039791717, 2.7409432350578586, 3.139404511385828, 2.7409432350578586, 3.060595488614172), (2.8382298404519433, 2.910812354814198, 2.910812354814198, 2.969535391629489, 2.889187645185802, 2.7695353916294887, 2.71857758689563, 3.1170388632235997, 2.763308883220087, 3.0829611367764005), (2.820004185819374, 2.892586700181629, 2.892586700181629, 2.987761046262058, 2.8709619905532326, 2.787761046262058, 2.7368032415281993, 3.135264517856169, 2.745083228587518, 3.0647354821438313), (2.8666795068856312, 2.8459113791159596, 2.8459113791153716, 2.941085725195801, 2.8242866694875635, 2.7410857251958007, 2.69012792046253, 3.0885891967899117, 2.791758549653775, 3.018060161077574), (2.8957660147080118, 2.87499788693834, 2.816824871292991, 2.9119992173734204, 2.795200161665183, 2.71199921737342, 2.6610414126401496, 3.1176757046122923, 2.7626720418313946, 2.9889736532551936), (2.8957660147080118, 2.87499788693834, 2.816824871292991, 2.9119992173734204, 2.795200161665183, 2.71199921737342, 2.6610414126401496, 3.1176757046122923, 2.7626720418313946, 2.9889736532551936), (2.869920725897981, 2.8491525981283092, 2.79097958248296, 2.8861539285633895, 2.821045450475214, 2.6861539285633893, 2.6868867014501805, 3.0918304158022614, 2.7368267530213637, 3.0148189420652245), (2.82086747137534, 2.8000993436056683, 2.741926327960319, 2.8371006740407485, 2.771992195952573, 2.6371006740407483, 2.6378334469275395, 3.0427771612796204, 2.7858800075440047, 2.9657656875425835), (2.797507464753423, 2.776739336983751, 2.718566321338402, 2.8604606806626656, 2.748632189330656, 2.6604606806626654, 2.6144734403056225, 3.0194171546577033, 2.7625200009220876, 2.9891256941645006), (2.797507464753423, 2.776739336983751, 2.718566321338402, 2.8604606806626656, 2.748632189330656, 2.6604606806626654, 2.6144734403056225, 3.0194171546577033, 2.7625200009220876, 2.9891256941645006)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0666666666658773, 3.0666666666658773, 2.9333333333341227, 2.9333333333341227, 2.9333333333341227, 2.9333333333341227, 3.0666666666658773, 2.9333333333341227, 2.9333333333341227, 2.9333333333341227), (3.0174988428015688, 3.115834490530186, 2.884165509469814, 2.9825011571984312, 2.884165509469814, 2.884165509469814, 3.0174988428015688, 2.884165509469814, 2.884165509469814, 2.9825011571984312), (3.0374408850604806, 3.1357765327890976, 2.8642234672109024, 3.002443199457343, 2.8642234672109024, 2.8642234672109024, 2.997556800542657, 2.8642234672109024, 2.8642234672109024, 3.002443199457343), (3.0204549501493956, 3.1187905978780126, 2.8812094021219874, 3.019429134368428, 2.8472375322998174, 2.8812094021219874, 3.014542735453742, 2.8472375322998174, 2.8472375322998174, 2.985457264546258), (2.9937351039399394, 3.0920707516685564, 2.9079292483314436, 2.992709288158972, 2.820517686090361, 2.854489555912531, 3.041262581663198, 2.8739573785092736, 2.820517686090361, 2.958737418336802), (3.005885540362349, 3.079920315246147, 2.895778811909034, 2.9805588517365624, 2.8083672496679517, 2.8423391194901217, 3.0534130180856076, 2.886107814931683, 2.8083672496679517, 2.9708878547592112), (2.994709196536301, 3.091096659072195, 2.8846024680829863, 2.9693825079105145, 2.8195435934939996, 2.8535154633161697, 3.0422366742595597, 2.874931471105635, 2.7971909058419038, 2.982064198585259), (2.9739646093958116, 3.0703520719317057, 2.9053470552234755, 2.9901270950510037, 2.840288180634489, 2.8327708761756805, 3.0214920871190705, 2.854186883965146, 2.7764463187014146, 2.96131961144477), (2.9642691067883793, 3.0606565693242733, 2.895651552616043, 2.999822597658436, 2.849983683241921, 2.823075373568248, 3.011796584511638, 2.8444913813577135, 2.786141821308847, 2.9710151140522023), (2.9556540105183924, 3.0520414730542864, 2.887036456346056, 3.008437693928423, 2.8413685869719343, 2.814460277298261, 3.020411680781625, 2.8531064776277004, 2.77752672503886, 2.979630210322189), (2.9474784680978043, 3.0438659306336984, 2.8952119987666443, 3.000262151507835, 2.8331930445513462, 2.8226358197188492, 3.012236138361037, 2.8612820200482885, 2.769351182618272, 2.9878057527427773), (2.9474784680978043, 3.0438659306336984, 2.8952119987666443, 3.000262151507835, 2.8331930445513462, 2.8226358197188492, 3.012236138361037, 2.8612820200482885, 2.769351182618272, 2.9878057527427773), (2.9474784680978043, 3.0438659306336984, 2.8952119987666443, 3.000262151507835, 2.8331930445513462, 2.8226358197188492, 3.012236138361037, 2.8612820200482885, 2.769351182618272, 2.9878057527427773)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (2.9, 3.1, 2.9, 3.1, 2.9, 2.9, 2.9, 2.9, 2.9, 2.9), (2.8262482642058786, 3.1737517357941214, 2.8262482642058786, 3.026248264205879, 2.8262482642058786, 2.973751735794121, 2.8262482642058786, 2.8262482642058786, 2.8262482642058786, 2.8262482642058786), (2.796427399989927, 3.1439308715781698, 2.8560691284218302, 2.996427399989927, 2.796427399989927, 2.9439308715781696, 2.796427399989927, 2.796427399989927, 2.8560691284218302, 2.8560691284218302), (2.783067476885199, 3.1305709484734416, 2.8694290515265584, 2.983067476885199, 2.783067476885199, 2.9572907946828977, 2.783067476885199, 2.809787323094655, 2.842709205317102, 2.8694290515265584), (2.7952179133075035, 3.118420512051137, 2.881579487948863, 2.9709170404628944, 2.770917040462894, 2.9694412311052023, 2.770917040462894, 2.8219377595169597, 2.8305587688947975, 2.8572786151042537), (2.7616888818287713, 3.084891480572405, 2.915108519427595, 2.937388008984162, 2.737388008984162, 2.93591219962647, 2.737388008984162, 2.7884087280382275, 2.8640878003735297, 2.8237495836255215), (2.7616888818287713, 3.084891480572405, 2.915108519427595, 2.937388008984162, 2.737388008984162, 2.93591219962647, 2.737388008984162, 2.7884087280382275, 2.8640878003735297, 2.8237495836255215), (2.751993379221426, 3.0751959779650595, 2.90541301682025, 2.9470835115915075, 2.7470835115915073, 2.926216697019125, 2.7470835115915073, 2.798104230645573, 2.8543922977661844, 2.8140540810181762), (2.7519933792212607, 3.0751959779648943, 2.9054130168200847, 2.9470835115916727, 2.7470835115916725, 2.92621669701929, 2.7470835115916725, 2.7981042306454076, 2.8543922977663496, 2.814054081018011), (2.743817836800748, 3.0670204355443818, 2.897237474399572, 2.9552590540121852, 2.73890796917116, 2.9180411545987774, 2.73890796917116, 2.80627977306592, 2.862567840186862, 2.8222296234385236), (2.743817836800748, 3.0670204355443818, 2.897237474399572, 2.9552590540121852, 2.73890796917116, 2.9180411545987774, 2.73890796917116, 2.80627977306592, 2.862567840186862, 2.8222296234385236), (2.743817836800748, 3.0670204355443818, 2.897237474399572, 2.9552590540121852, 2.73890796917116, 2.9180411545987774, 2.73890796917116, 2.80627977306592, 2.862567840186862, 2.8222296234385236)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (2.9, 2.9, 3.1, 2.9, 2.9, 3.1, 3.1, 2.9, 2.9, 3.1), (2.973751735793949, 2.973751735793949, 3.173751735793949, 2.826248264206051, 2.826248264206051, 3.026248264206051, 3.026248264206051, 2.826248264206051, 2.826248264206051, 3.173751735793949), (2.973751735793949, 2.973751735793949, 3.173751735793949, 2.826248264206051, 2.826248264206051, 3.026248264206051, 3.026248264206051, 2.826248264206051, 2.826248264206051, 3.173751735793949), (3.0756673452574295, 3.0756673452574295, 3.0718361263304685, 2.7243326547425704, 2.7243326547425704, 2.9243326547425705, 3.1281638736695316, 2.7243326547425704, 2.7243326547425704, 3.0718361263304685), (3.0309360489355712, 3.0309360489355712, 3.0271048300086103, 2.7690639510644286, 2.679601358420712, 2.9690639510644288, 3.0834325773476734, 2.679601358420712, 2.7690639510644286, 3.116567422652327), (3.0644650804145024, 3.0644650804145024, 2.993575798529679, 2.7355349195854974, 2.7131303898996433, 2.9355349195854976, 3.1169616088266046, 2.646072326941781, 2.7355349195854974, 3.0830383911733956), (3.033348199705776, 3.0955819611232287, 3.0246926792384055, 2.7666518002942238, 2.682013509190917, 2.966651800294224, 3.0858447281178782, 2.6149554462330546, 2.704418038876771, 3.0519215104646693), (3.0915212153458183, 3.0374089454831865, 2.9665196635983633, 2.7084787846541816, 2.623840493550875, 3.024824815934266, 3.027671712477836, 2.5567824305930125, 2.646245023236729, 3.1100945261047115), (3.1188712928445175, 3.0100588679844873, 2.9938697410970625, 2.6811287071554823, 2.5964904160521756, 2.997474738435567, 3.000321634979137, 2.5841325080917117, 2.673595100735428, 3.0827444486060123), (3.067180715226791, 2.958368290366761, 2.942179163479336, 2.7328192847732087, 2.5447998384344492, 3.049165316053293, 2.9486310573614105, 2.5324419304739854, 2.621904523117702, 3.1344350262237386), (3.018127460705574, 2.9093150358455437, 2.893125908958119, 2.6837660302519915, 2.495746583913232, 3.000112061532076, 2.9976843118826277, 2.5814951849952026, 2.670957777638919, 3.0853817717025214), (3.0414874673254624, 2.8859550292256553, 2.9164859155780074, 2.660406023632103, 2.4723865772933435, 3.0234720681519645, 2.9743243052627393, 2.604855191615091, 2.6475977710190306, 3.062021765082633), (3.0414874673254624, 2.8859550292256553, 2.9164859155780074, 2.660406023632103, 2.4723865772933435, 3.0234720681519645, 2.9743243052627393, 2.604855191615091, 2.6475977710190306, 3.062021765082633)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0500000000024867, 2.9499999999975133, 3.0500000000024867, 3.0500000000024867, 2.9499999999975133, 2.9499999999975133, 2.9499999999975133, 2.9499999999975133, 3.0500000000024867, 2.9499999999975133), (3.0131241321039592, 2.913124132098986, 3.0131241321039592, 3.086875867901014, 2.913124132098986, 2.9868758678960408, 2.9868758678960408, 2.913124132098986, 3.0131241321039592, 2.9868758678960408), (3.0729502588818782, 2.853298005321067, 2.9532980053260403, 3.027049741123095, 2.853298005321067, 3.0467019946739597, 2.9270497411181218, 2.853298005321067, 3.0729502588818782, 2.9270497411181218), (2.971034649412704, 2.7513823958518926, 2.851382395856866, 2.925134131653921, 2.7513823958518926, 2.9447863852047855, 2.8251341316489476, 2.955213614790241, 2.971034649412704, 2.8251341316489476), (3.0157659457358523, 2.796113692175041, 2.8961136921800144, 2.8804028353307727, 2.7066510995287443, 2.900055088881637, 2.7804028353257992, 2.9104823184670927, 2.9263033530895557, 2.7804028353257992), (2.9957260610795466, 2.8161535768313466, 2.91615357683632, 2.860362950674467, 2.6866112148724386, 2.8800152042253315, 2.800442719982105, 2.890442433810787, 2.90626346843325, 2.800442719982105), (3.013951715713692, 2.7979279221972013, 2.8979279222021748, 2.8785886053086123, 2.6683855602382933, 2.8617895495911863, 2.7822170653479597, 2.9086680884449323, 2.8880378137991047, 2.81866837461625), (2.9971871999735393, 2.814692437937354, 2.881163406462022, 2.895353121048765, 2.6516210444981407, 2.878554065331339, 2.7989815810881122, 2.8919035727047797, 2.871273298058952, 2.8019038588760976), (2.966070319262437, 2.845809318648456, 2.9122802871731244, 2.8642362403376627, 2.6205041637870385, 2.909670946042441, 2.76786470037701, 2.8607866919936775, 2.84015641734785, 2.7707869781649954), (2.936983811440839, 2.816722810826858, 2.9413667949947224, 2.8933227481592607, 2.5914176559654405, 2.880584438220843, 2.738778192555412, 2.8317001841720795, 2.869242925169448, 2.7417004703433974), (2.909633733941027, 2.789372733327046, 2.9140167174949103, 2.8659726706594486, 2.6187677334652526, 2.853234360721031, 2.7114281150556, 2.8043501066722674, 2.89659300266926, 2.7690505478432095), (2.909633733941027, 2.789372733327046, 2.9140167174949103, 2.8659726706594486, 2.6187677334652526, 2.853234360721031, 2.7114281150556, 2.8043501066722674, 2.89659300266926, 2.7690505478432095), (2.87284379304851, 2.752582792434529, 2.9508066583874273, 2.8291827297669316, 2.5819777925727356, 2.816444419828514, 2.674638174163083, 2.7675601657797504, 2.859803061776743, 2.8058404887357264), (2.8261237798046763, 2.7058627791906953, 2.997526671631261, 2.782462716523098, 2.535257779328902, 2.76972440658468, 2.6279181609192492, 2.7208401525359167, 2.8130830485329095, 2.7591204754918928), (2.8261237798046763, 2.7058627791906953, 2.997526671631261, 2.782462716523098, 2.535257779328902, 2.76972440658468, 2.6279181609192492, 2.7208401525359167, 2.8130830485329095, 2.7591204754918928)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0250000000012434, 2.9749999999987566, 2.9749999999987566, 3.0250000000012434, 3.0250000000012434, 2.9749999999987566, 2.9749999999987566, 2.9749999999987566, 3.0250000000012434, 2.9749999999987566), (3.043437933950507, 2.956562066049493, 2.956562066049493, 3.043437933950507, 3.0065620660519796, 2.9934379339480204, 2.9934379339480204, 2.956562066049493, 3.0065620660519796, 2.956562066049493), (3.073350997339585, 2.926649002660415, 2.926649002660415, 3.013524870561429, 2.9766490026629016, 3.0233509973370984, 3.0233509973370984, 2.926649002660415, 2.9766490026629016, 2.926649002660415), (3.060611546156225, 2.9139095514770545, 2.939388453843775, 3.0262643217447893, 2.9639095514795413, 3.0360904485204587, 3.010611546153738, 2.9139095514770545, 2.989388453846262, 2.9139095514770545), (3.0829771943178925, 2.891543903315387, 2.9170228056821075, 3.0038986735831217, 2.9415439033178736, 3.0584560966821264, 2.9882458979920705, 2.891543903315387, 2.967022805684594, 2.936275199638722), (3.07295725198974, 2.8815239609872343, 2.907002863353955, 3.0139186159112743, 2.9515638456460263, 3.0484361543539737, 2.978225955663918, 2.8815239609872343, 2.977042748012747, 2.946295141966875), (3.054731597356619, 2.8632983063541135, 2.888777208720834, 2.9956929612781535, 2.9333381910129055, 3.030210499720853, 2.9964516102970387, 2.8632983063541135, 2.9952684026458676, 2.9645207965999956), (3.0379670816169813, 2.8465337906144756, 2.905541724460472, 2.9789284455385157, 2.9165736752732676, 3.013445983981215, 3.0132161260366765, 2.8800628220937514, 2.9785038869062297, 2.9477562808603577), (3.0457463017945496, 2.8387545704369073, 2.9133209446380404, 2.9711492253609473, 2.9087944550956992, 3.0212252041587835, 3.020995346214245, 2.872283601916183, 2.9707246667286613, 2.9399770606827893), (3.0384746748389544, 2.831482943481312, 2.9205925715936356, 2.963877598405352, 2.901522828140104, 3.0284968311143787, 3.0137237192586497, 2.865011974960588, 2.9779962936842566, 2.9472486876383845), (3.0247996360889866, 2.84515798223128, 2.906917532843668, 2.9502025596553842, 2.887847789390136, 3.014821792364411, 3.0273987580086175, 2.8786870137105556, 2.9643212549342888, 2.9335736488884168), (3.0186679792736424, 2.851289639046624, 2.9007858760283236, 2.94407090284004, 2.8939794462054804, 3.020953449179755, 3.0335304148239617, 2.8725553568952114, 2.9581895981189446, 2.9274419920730725), (3.0186679792736424, 2.851289639046624, 2.9007858760283236, 2.94407090284004, 2.8939794462054804, 3.020953449179755, 3.0335304148239617, 2.8725553568952114, 2.9581895981189446, 2.9274419920730725)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.1, 3.1, 3.1, 2.9, 2.9, 2.9, 2.9, 3.1, 2.9, 2.9), (2.9524965284132256, 2.9524965284132256, 3.2475034715867745, 2.7524965284132255, 3.0475034715867744, 2.7524965284132255, 2.7524965284132255, 3.2475034715867745, 2.7524965284132255, 2.7524965284132255), (2.7730181480850704, 2.7730181480850704, 3.0680250912586193, 2.5730181480850702, 2.868025091258619, 2.5730181480850702, 2.9319749087413807, 3.0680250912586193, 2.5730181480850702, 2.9319749087413807), (2.7220603433508312, 2.7220603433508312, 3.1189828959928585, 2.6239759528193094, 2.81706728652438, 2.522060343350831, 2.98293271347562, 3.1189828959928585, 2.522060343350831, 2.8810171040071415), (2.6856090340844188, 2.685609034085784, 3.1554342052594015, 2.587524643551401, 2.780615977257837, 2.5585116526187393, 2.9464814042077117, 3.1554342052607667, 2.485609034082923, 2.917468413273554), (2.747842795504116, 2.623375272666087, 3.0932004438408804, 2.525290882131704, 2.718382215839316, 2.496277891200218, 2.8842476427880146, 3.0932004438422456, 2.547842795501444, 2.979702174692075), (2.7769293033232243, 2.5942887648469783, 3.064113936021772, 2.4962043743125957, 2.6892957080202073, 2.5253643990193266, 2.913334150607123, 3.122286951661354, 2.5187562876823355, 2.9506156668729666), (2.749579225824773, 2.566938687348527, 3.0367638585233205, 2.523554451811047, 2.7166457855186588, 2.552714476517778, 2.8859840731086717, 3.1496370291598055, 2.491406210183884, 2.923265589374515), (2.7237339370162634, 2.5410933985400175, 3.010918569714811, 2.5493997406195565, 2.6908004967101493, 2.5785597653262875, 2.860138784300162, 3.123791740351296, 2.5172514989923935, 2.9491108781830246), (2.699207309755655, 2.516566771279409, 2.9863919424542025, 2.524873113358948, 2.715327123970758, 2.554033138065679, 2.884665411560771, 3.0992651130906874, 2.541778126253002, 2.9736375054436333), (2.675847303134033, 2.493206764657787, 2.9630319358325807, 2.501513106737326, 2.7386871305923797, 2.5773931446873006, 2.861305404939149, 3.122625119712309, 2.565138132874624, 2.9502774988220115), (2.675847303134033, 2.493206764657787, 2.9630319358325807, 2.501513106737326, 2.7386871305923797, 2.5773931446873006, 2.861305404939149, 3.122625119712309, 2.565138132874624, 2.9502774988220115)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.1, 2.9, 2.9, 2.9, 3.1, 3.1, 2.9, 2.9, 3.1, 2.9), (3.0401738732257058, 2.959826126776542, 2.9598261267742942, 2.8401738732234576, 3.0401738732257058, 3.1598261267742944, 2.8401738732234576, 2.8401738732257056, 3.040173873223458, 2.959826126776542), (2.9382582637618087, 2.857910517312645, 2.857910517310397, 2.7382582637595605, 3.142089482689603, 3.0579105173103973, 2.7382582637595605, 2.9420894826896027, 2.9382582637595607, 3.0617417362404393), (2.901806954496709, 2.8943618265792406, 2.8214592080438017, 2.7747095730246603, 3.1785407919561983, 3.0943618265769928, 2.701806954492965, 2.9056381734230072, 2.901806954494461, 3.025290426973844), (2.8682779230177777, 2.8608327951003094, 2.7879301765648705, 2.741180541545729, 3.2120698234351295, 3.127890858055924, 2.735335985971896, 2.9391672049019384, 2.8682779230155298, 2.9917613954949127), (2.837161042307671, 2.891949675810416, 2.756813295854764, 2.7722974222558356, 3.180952942725023, 3.0967739773458174, 2.7664528666820027, 2.908050324191832, 2.8993948037256363, 2.960644514784806), (2.8098109648092198, 2.8645995983119645, 2.7841633733532154, 2.7449473447573842, 3.1536028652265715, 3.069423899847366, 2.793802944180454, 2.9354004016902833, 2.9267448812240877, 2.9332944372863547), (2.7839656760007103, 2.838754309503455, 2.758318084544706, 2.7707926335658937, 3.179448154035081, 3.0435786110388565, 2.7679576553719447, 2.9612456904987927, 2.952590170032597, 2.9074491484778453), (2.8330189305217015, 2.789701054982464, 2.7092648300237148, 2.819845888086885, 3.13039489951409, 2.9945253565178653, 2.817010909892936, 2.9121924359778015, 2.903536915511606, 2.858395893956854), (2.7395789040371645, 2.696261028497927, 2.615824803539178, 2.726405861602348, 3.036954873029553, 3.0879653830024023, 2.723570883408399, 2.8187524094932646, 2.810096889027069, 2.764955867472317), (2.7395789040371645, 2.696261028497927, 2.615824803539178, 2.726405861602348, 3.036954873029553, 3.0879653830024023, 2.723570883408399, 2.8187524094932646, 2.810096889027069, 2.764955867472317)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (3.0500000000026644, 2.9499999999973356, 2.9499999999973356, 2.9499999999973356, 2.9499999999973356, 2.9499999999973356, 3.0500000000026644, 3.0500000000026644, 2.9499999999973356, 3.0500000000026644), (3.100957804737537, 3.000957804732208, 2.899042195262463, 2.899042195262463, 2.899042195262463, 2.899042195262463, 3.100957804737537, 2.999042195267792, 2.899042195262463, 2.999042195267792), (3.0562265084125473, 3.0456891010571976, 2.8543108989374737, 2.8543108989374737, 2.9437734915874527, 2.8543108989374737, 3.0562265084125473, 2.9543108989428024, 2.9437734915874527, 2.9543108989428024), (3.0161467390989407, 3.005609331743591, 2.814231129623867, 2.814231129623867, 2.903693722273846, 2.814231129623867, 3.096306277726154, 2.994390668256409, 2.903693722273846, 2.994390668256409), (2.9979210844663067, 3.023834986376225, 2.796005474991233, 2.796005474991233, 2.885468067641212, 2.832456784256501, 3.07808062309352, 2.976165013623775, 2.92191937690648, 3.012616322889043), (2.9643920529869114, 2.99030595489683, 2.8295345064706283, 2.762476443511838, 2.851939036161817, 2.8659858157358964, 3.0445515916141246, 2.9426359821443797, 2.888390345427085, 3.0461453543684383), (2.979950493342794, 2.9747475145409474, 2.813976066114746, 2.7780348838677202, 2.8674974765176993, 2.850427375380014, 3.028993151258242, 2.9270775417884973, 2.9039487857829673, 3.030586914012556), (2.993625532091882, 2.9610724757918594, 2.800301027365658, 2.7917099226168083, 2.853822437768611, 2.864102414129102, 3.015318112509154, 2.9134025030394093, 2.9176238245320554, 3.016911875263468), (2.993625532091882, 2.9610724757918594, 2.800301027365658, 2.7917099226168083, 2.853822437768611, 2.864102414129102, 3.015318112509154, 2.9134025030394093, 2.9176238245320554, 3.016911875263468), (2.981362218460924, 2.9488091621609014, 2.812564340996616, 2.7794466089858503, 2.841559124137653, 2.851839100498144, 3.027581426140112, 2.9256658166703673, 2.9298871381630134, 3.00464856163251), (2.9580022118389238, 2.9254491555389013, 2.789204334374616, 2.8028066156078504, 2.8649191307596533, 2.828479093876144, 3.004221419518112, 2.9490258232923674, 2.9065271315410133, 2.9812885550105097), (2.9580022118389238, 2.9254491555389013, 2.789204334374616, 2.8028066156078504, 2.8649191307596533, 2.828479093876144, 3.004221419518112, 2.9490258232923674, 2.9065271315410133, 2.9812885550105097)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (2.9666666666654034, 2.9666666666654034, 3.0333333333345966, 3.0333333333345966, 2.9666666666654034, 2.9666666666654034, 2.9666666666654034, 3.0333333333345966, 3.0333333333345966, 2.9666666666654034), (2.9912505785961527, 2.942082754734654, 3.0087494214038473, 3.0087494214038473, 2.942082754734654, 2.9912505785961527, 2.9912505785961527, 3.057917245265346, 3.0087494214038473, 2.942082754734654), (3.011192620855381, 2.9620247969938824, 3.0286914636630757, 3.0286914636630757, 2.9221407124754255, 2.9713085363369243, 2.9713085363369243, 3.0379752030061176, 2.988807379144619, 2.9221407124754255), (2.9772207510329336, 2.928052927171435, 3.0626633334855233, 3.0626633334855233, 2.888168842652978, 2.9373366665144767, 2.9373366665144767, 3.00400333318367, 2.954835509322171, 2.956112582297873), (2.9623103189250823, 2.9131424950635836, 3.047752901377672, 3.0775737655933746, 2.903079274760829, 2.9224262344066254, 2.9224262344066254, 3.0189137652915212, 2.9697459414300225, 2.941202150190022), (2.975670242030038, 2.926502418168539, 3.0343929782727166, 3.064213842488419, 2.9164391978657846, 2.90906631130167, 2.90906631130167, 3.0055538421865657, 2.983105864534978, 2.9278422270850664), (2.975670242030038, 2.926502418168539, 3.0343929782727166, 3.064213842488419, 2.9164391978657846, 2.90906631130167, 2.90906631130167, 3.0055538421865657, 2.983105864534978, 2.9278422270850664), (2.953317554377354, 2.9041497305158552, 3.0120402906200328, 3.0418611548357353, 2.9387918855184685, 2.886713623648986, 2.886713623648986, 2.983201154533882, 3.005458552187662, 2.95019491473775), (2.932572967237509, 2.8834051433760104, 3.0327848777598776, 3.0211165676958904, 2.9180472983786236, 2.8659690365091413, 2.8659690365091413, 2.962456567394037, 3.0262031393275066, 2.970939501877595), (2.9422684698447674, 2.873709640768752, 3.0230893751526193, 3.011421065088632, 2.9083517957713654, 2.8756645391163995, 2.856273533901883, 2.9721520700012953, 3.035898641934765, 2.9612439992703368), (2.9336533735747845, 2.865094544498604, 3.0144742788826364, 3.0028059688186493, 2.8997366995012173, 2.8842796353863824, 2.864888630172031, 2.9635369737313124, 3.044513738204748, 2.9698590955403197), (2.941828915995297, 2.8569190020780915, 3.006298736462124, 3.010981511239162, 2.8915611570807047, 2.87610409296587, 2.8567130877515186, 2.9553614313108, 3.0526892806252603, 2.9780346379608322), (2.934042247121056, 2.8491323332038503, 3.014085405336365, 3.0031948423649206, 2.899347825954946, 2.883890761840111, 2.8489264188772774, 2.9475747624365587, 3.044902611751019, 2.9858213068350734), (2.934042247121056, 2.8491323332038503, 3.014085405336365, 3.0031948423649206, 2.899347825954946, 2.883890761840111, 2.8489264188772774, 2.9475747624365587, 3.044902611751019, 2.9858213068350734)], [(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0), (2.9, 2.9, 2.9, 3.1, 3.1, 2.9, 2.9, 2.9, 3.1, 2.9), (2.8631241321011913, 2.8631241321011913, 2.8631241321011913, 3.1368758678988087, 3.0631241321011915, 2.8631241321011913, 2.8631241321011913, 2.9368758678988085, 3.1368758678988087, 2.9368758678988085), (2.9229502588805354, 2.8032980053218473, 2.8032980053218473, 3.1967019946781527, 3.0032980053218474, 2.8032980053218473, 2.9229502588805354, 2.8770497411194644, 3.0770497411194646, 2.8770497411194644), (2.942990143537486, 2.7832581206648968, 2.8233378899792143, 3.1766621100207857, 2.983258120664897, 2.7832581206648968, 2.942990143537486, 2.8970896257768315, 3.0570098564620976, 2.8570098564620974), (2.906538834270929, 2.74680681139834, 2.859789199245771, 3.140210800754229, 2.94680681139834, 2.8197094299314536, 2.906538834270929, 2.8606383165102747, 3.0934611657286544, 2.8205585471955406), (2.906538834270782, 2.746806811398487, 2.859789199245918, 3.140210800754376, 2.946806811398193, 2.8197094299316006, 2.906538834270782, 2.8606383165101277, 3.0934611657288014, 2.8205585471953936), (2.9220972746259193, 2.762365251753624, 2.844230758890781, 3.1246523603992387, 2.931248371043056, 2.8041509895764634, 2.9220972746259193, 2.876196756865265, 3.077902725373664, 2.8050001068402564), (2.9366405285368486, 2.7478219978426948, 2.8296875049798516, 3.1101091064883093, 2.9457916249539853, 2.789607735665534, 2.90755402071499, 2.8616535029543355, 3.0924459792845935, 2.8195433607511857), (2.9092904510371604, 2.775172075342383, 2.8023374274801633, 3.1374591839879975, 2.918441547454297, 2.762257658165846, 2.8802039432153017, 2.8343034254546473, 3.1197960567842817, 2.7921932832514975), (2.896367806631555, 2.7622494309367776, 2.8152600718857688, 3.124536539582392, 2.9055189030486916, 2.7493350137602404, 2.8672812988096963, 2.8472260698602527, 3.132718701189887, 2.805115927657103), (2.908631120262469, 2.7499861173058635, 2.827523385516683, 3.112273225951478, 2.8932555894177776, 2.7615983273911544, 2.8550179851787822, 2.8594893834911668, 3.120455387558973, 2.792852614026189), (2.908631120262469, 2.7499861173058635, 2.827523385516683, 3.112273225951478, 2.8932555894177776, 2.7615983273911544, 2.8550179851787822, 2.8594893834911668, 3.120455387558973, 2.792852614026189), (2.908631120262469, 2.7499861173058635, 2.827523385516683, 3.112273225951478, 2.8932555894177776, 2.7615983273911544, 2.8550179851787822, 2.8594893834911668, 3.120455387558973, 2.792852614026189)]]"
        self.expected_all_intermediate_budgets = "[[0, 210, 270, 330, 390, 450, 510, 630, 690, 750, 810, 870, 990, 1000], [0, 210, 270, 330, 390, 450, 510, 570, 630, 690, 750, 810, 870, 930, 990, 1000], [0, 1000], [0, 210, 270, 330, 390, 450, 510, 570, 630, 750, 810, 990, 1000], [0, 210, 270, 330, 390, 450, 510, 570, 750, 810, 870, 930, 990, 1000], [0, 210, 270, 330, 450, 510, 570, 630, 690, 750, 810, 870, 930, 1000], [0, 210, 270, 330, 390, 510, 630, 690, 810, 870, 930, 990, 1000], [0, 210, 270, 330, 390, 450, 570, 690, 750, 810, 870, 930, 990, 1000], [0, 210, 270, 330, 390, 510, 570, 630, 690, 750, 870, 930, 990, 1000], [0, 210, 270, 450, 510, 570, 630, 690, 750, 870, 930, 990, 1000], [0, 210, 270, 330, 390, 450, 630, 690, 750, 810, 870, 930, 990, 1000], [0, 210, 270, 330, 390, 450, 510, 570, 630, 690, 750, 810, 870, 930, 990, 1000], [0, 1000], [0, 1000], [0, 210, 270, 330, 390, 450, 510, 570, 630, 690, 750, 810, 930, 1000], [0, 210, 270, 330, 390, 570, 690, 750, 810, 870, 930, 990, 1000], [0, 1000], [0, 210, 330, 390, 570, 630, 690, 810, 870, 930, 990, 1000], [0, 1000], [0, 1000], [0, 1000], [0, 210, 390, 450, 510, 570, 630, 690, 810, 870, 930, 990, 1000], [0, 210, 270, 330, 390, 450, 510, 570, 630, 690, 750, 870, 930, 990, 1000], [0, 210, 270, 330, 510, 570, 630, 690, 750, 810, 870, 930, 990, 1000]]"
        self.expected_all_est_objectives = "[[120.0, 135.9999999992042, 136.73751735714364, 137.33577862489784, 139.3740908142008, 139.8214037773969, 140.22220147052704, 140.55749178531923, 140.86866059240376, 143.48644629621737, 143.75994707120185, 144.79375862357057, 145.02735868979545, 145.02735868979545], [120.0, 123.99999999980103, 124.73751735770682, 130.12186876756573, 130.12186876756573, 131.91112062041014, 133.5143113929167, 133.87882448557525, 134.2141148003439, 134.2141148003439, 136.8319005041889, 137.10540127917338, 137.36385416726324, 137.60912043986474, 139.71152103575875, 139.71152103575875], [120.0, 120.0], [120.0, 123.99999999980103, 124.73751735770682, 125.33577862546575, 127.37409081474372, 127.8214037779623, 128.22220147108897, 129.68025384167237, 130.0155441564588, 132.63332986030372, 133.72733296024174, 133.96093302644064, 133.96093302644064], [120.0, 123.99999999980103, 124.73751735770682, 125.33577862545623, 125.84535667276532, 126.29266963596145, 127.89586040847487, 128.26037350113026, 129.42383381392582, 130.51783691387385, 130.77628980196366, 131.0215560745697, 131.0215560745697, 131.0215560745697], [120.0, 121.0, 123.9500694317355, 126.34311450279976, 130.36893117180057, 131.97212194425262, 133.43017431483605, 134.77133557393452, 135.08250438101905, 136.24596469382507, 138.70747166865604, 139.7412832210436, 139.98654949364973, 139.98654949364973], [120.0, 121.0, 123.9500694317355, 126.34311450274275, 128.38142669203734, 128.7822243851674, 130.12338564427765, 131.36806087265973, 131.64156164764924, 131.90001453573905, 132.14528080832252, 133.07968107315273, 133.07968107315273], [120.0, 122.0, 123.47503471594109, 124.67155725150427, 124.92634627517353, 125.15000275679584, 125.3322593031215, 126.73251893510042, 127.314249091548, 127.314249091548, 127.83115486774862, 129.7932850486543, 130.26048518109266, 130.26048518109266], [120.0, 121.33333333331755, 122.31668981060373, 122.51611023319285, 122.68596958230366, 123.22036650649282, 123.34187087071685, 123.45363430897739, 123.86852605178721, 123.96548107786151, 124.05163204056136, 124.13338746476725, 124.13338746476725, 124.13338746476725], [120.0, 123.0, 125.21255207382364, 125.80896935814263, 125.94256858918995, 126.06407295341297, 127.06994389777493, 127.06994389777493, 127.16689892384846, 127.16689892384846, 127.24865434805359, 127.24865434805359, 127.24865434805359], [120.0, 121.0, 121.73751735793947, 121.73751735793947, 123.77582954720909, 124.22314251042773, 124.55843282521703, 124.86960163230425, 126.03306194510513, 126.30656272009212, 127.34037427244661, 128.32143936287096, 128.55503942906986, 128.55503942906986], [120.0, 120.50000000002484, 120.86875867901016, 122.06528121456857, 126.14190559333544, 127.03653151979849, 127.23693036636152, 127.41918691270301, 127.5868320701045, 128.20916968432653, 128.79089984075853, 129.33790139075475, 129.33790139075475, 130.44159961753027, 132.31040014728362, 132.31040014728362], [120.0, 120.0], [120.0, 120.0], [120.0, 120.25000000001248, 120.43437933950509, 121.03264060728662, 121.16003511912025, 121.6073480823536, 121.70754750563512, 122.07206059829748, 122.40735091309028, 122.48514311486595, 122.55785938442197, 122.8313601594213, 122.89267672757477, 122.89267672757477], [120.0, 121.0, 123.9500694317355, 129.33442084158014, 129.84399888892258, 130.20851198158735, 131.45318720996949, 131.7440522881606, 132.01755306314504, 132.2760059512302, 132.52127222383632, 132.75487229005248, 132.75487229005248], [120.0, 120.0], [120.0, 121.0, 121.59826126775417, 123.63657345703216, 124.00108654969061, 124.3363768644799, 124.64754567158096, 124.92104644656548, 125.17949933465063, 126.16056442507039, 129.89816548445194, 129.89816548445194], [120.0, 120.0], [120.0, 120.0], [120.0, 120.0], [120.0, 120.50000000002663, 121.5191560947241, 122.41378202122385, 123.21537740749598, 123.39763395382236, 124.06821458341027, 124.22379898696909, 124.36054937445995, 124.36054937445995, 124.48318251076951, 124.95038264320958, 124.95038264320958], [120.0, 120.33333333334598, 120.57917245265345, 120.77859287524574, 121.4580302716947, 121.60713459277324, 121.74073382382274, 121.74073382382274, 122.18778757687643, 122.60267931967336, 122.6996343457459, 122.78578530844653, 122.86754073265176, 122.94540742139408, 122.94540742139408], [120.0, 122.0, 122.36875867898809, 123.56528121457497, 123.7656800611466, 124.49470624647773, 124.49470624647773, 124.65029065002908, 124.79572318913831, 125.34272473913214, 125.47195118318815, 125.5945843194973, 125.5945843194973, 125.5945843194973]]"
        self.expected_objective_curves = "[([0, 210, 270, 330, 390, 450, 510, 630, 690, 750, 810, 870, 990, 1000], [120.0, 135.9999999992042, 136.73751735714364, 137.33577862489784, 139.3740908142008, 139.8214037773969, 140.22220147052704, 140.55749178531923, 140.86866059240376, 143.48644629621737, 143.75994707120185, 144.79375862357057, 145.02735868979545, 145.02735868979545]), ([0, 210, 270, 330, 390, 450, 510, 570, 630, 690, 750, 810, 870, 930, 990, 1000], [120.0, 123.99999999980103, 124.73751735770682, 130.12186876756573, 130.12186876756573, 131.91112062041014, 133.5143113929167, 133.87882448557525, 134.2141148003439, 134.2141148003439, 136.8319005041889, 137.10540127917338, 137.36385416726324, 137.60912043986474, 139.71152103575875, 139.71152103575875]), ([0, 1000], [120.0, 120.0]), ([0, 210, 270, 330, 390, 450, 510, 570, 630, 750, 810, 990, 1000], [120.0, 123.99999999980103, 124.73751735770682, 125.33577862546575, 127.37409081474372, 127.8214037779623, 128.22220147108897, 129.68025384167237, 130.0155441564588, 132.63332986030372, 133.72733296024174, 133.96093302644064, 133.96093302644064]), ([0, 210, 270, 330, 390, 450, 510, 570, 750, 810, 870, 930, 990, 1000], [120.0, 123.99999999980103, 124.73751735770682, 125.33577862545623, 125.84535667276532, 126.29266963596145, 127.89586040847487, 128.26037350113026, 129.42383381392582, 130.51783691387385, 130.77628980196366, 131.0215560745697, 131.0215560745697, 131.0215560745697]), ([0, 210, 270, 330, 450, 510, 570, 630, 690, 750, 810, 870, 930, 1000], [120.0, 121.0, 123.9500694317355, 126.34311450279976, 130.36893117180057, 131.97212194425262, 133.43017431483605, 134.77133557393452, 135.08250438101905, 136.24596469382507, 138.70747166865604, 139.7412832210436, 139.98654949364973, 139.98654949364973]), ([0, 210, 270, 330, 390, 510, 630, 690, 810, 870, 930, 990, 1000], [120.0, 121.0, 123.9500694317355, 126.34311450274275, 128.38142669203734, 128.7822243851674, 130.12338564427765, 131.36806087265973, 131.64156164764924, 131.90001453573905, 132.14528080832252, 133.07968107315273, 133.07968107315273]), ([0, 210, 270, 330, 390, 450, 570, 690, 750, 810, 870, 930, 990, 1000], [120.0, 122.0, 123.47503471594109, 124.67155725150427, 124.92634627517353, 125.15000275679584, 125.3322593031215, 126.73251893510042, 127.314249091548, 127.314249091548, 127.83115486774862, 129.7932850486543, 130.26048518109266, 130.26048518109266]), ([0, 210, 270, 330, 390, 510, 570, 630, 690, 750, 870, 930, 990, 1000], [120.0, 121.33333333331755, 122.31668981060373, 122.51611023319285, 122.68596958230366, 123.22036650649282, 123.34187087071685, 123.45363430897739, 123.86852605178721, 123.96548107786151, 124.05163204056136, 124.13338746476725, 124.13338746476725, 124.13338746476725]), ([0, 210, 270, 450, 510, 570, 630, 690, 750, 870, 930, 990, 1000], [120.0, 123.0, 125.21255207382364, 125.80896935814263, 125.94256858918995, 126.06407295341297, 127.06994389777493, 127.06994389777493, 127.16689892384846, 127.16689892384846, 127.24865434805359, 127.24865434805359, 127.24865434805359]), ([0, 210, 270, 330, 390, 450, 630, 690, 750, 810, 870, 930, 990, 1000], [120.0, 121.0, 121.73751735793947, 121.73751735793947, 123.77582954720909, 124.22314251042773, 124.55843282521703, 124.86960163230425, 126.03306194510513, 126.30656272009212, 127.34037427244661, 128.32143936287096, 128.55503942906986, 128.55503942906986]), ([0, 210, 270, 330, 390, 450, 510, 570, 630, 690, 750, 810, 870, 930, 990, 1000], [120.0, 120.50000000002484, 120.86875867901016, 122.06528121456857, 126.14190559333544, 127.03653151979849, 127.23693036636152, 127.41918691270301, 127.5868320701045, 128.20916968432653, 128.79089984075853, 129.33790139075475, 129.33790139075475, 130.44159961753027, 132.31040014728362, 132.31040014728362]), ([0, 1000], [120.0, 120.0]), ([0, 1000], [120.0, 120.0]), ([0, 210, 270, 330, 390, 450, 510, 570, 630, 690, 750, 810, 930, 1000], [120.0, 120.25000000001248, 120.43437933950509, 121.03264060728662, 121.16003511912025, 121.6073480823536, 121.70754750563512, 122.07206059829748, 122.40735091309028, 122.48514311486595, 122.55785938442197, 122.8313601594213, 122.89267672757477, 122.89267672757477]), ([0, 210, 270, 330, 390, 570, 690, 750, 810, 870, 930, 990, 1000], [120.0, 121.0, 123.9500694317355, 129.33442084158014, 129.84399888892258, 130.20851198158735, 131.45318720996949, 131.7440522881606, 132.01755306314504, 132.2760059512302, 132.52127222383632, 132.75487229005248, 132.75487229005248]), ([0, 1000], [120.0, 120.0]), ([0, 210, 330, 390, 570, 630, 690, 810, 870, 930, 990, 1000], [120.0, 121.0, 121.59826126775417, 123.63657345703216, 124.00108654969061, 124.3363768644799, 124.64754567158096, 124.92104644656548, 125.17949933465063, 126.16056442507039, 129.89816548445194, 129.89816548445194]), ([0, 1000], [120.0, 120.0]), ([0, 1000], [120.0, 120.0]), ([0, 1000], [120.0, 120.0]), ([0, 210, 390, 450, 510, 570, 630, 690, 810, 870, 930, 990, 1000], [120.0, 120.50000000002663, 121.5191560947241, 122.41378202122385, 123.21537740749598, 123.39763395382236, 124.06821458341027, 124.22379898696909, 124.36054937445995, 124.36054937445995, 124.48318251076951, 124.95038264320958, 124.95038264320958]), ([0, 210, 270, 330, 390, 450, 510, 570, 630, 690, 750, 870, 930, 990, 1000], [120.0, 120.33333333334598, 120.57917245265345, 120.77859287524574, 121.4580302716947, 121.60713459277324, 121.74073382382274, 121.74073382382274, 122.18778757687643, 122.60267931967336, 122.6996343457459, 122.78578530844653, 122.86754073265176, 122.94540742139408, 122.94540742139408]), ([0, 210, 270, 330, 510, 570, 630, 690, 750, 810, 870, 930, 990, 1000], [120.0, 122.0, 122.36875867898809, 123.56528121457497, 123.7656800611466, 124.49470624647773, 124.49470624647773, 124.65029065002908, 124.79572318913831, 125.34272473913214, 125.47195118318815, 125.5945843194973, 125.5945843194973, 125.5945843194973])]"
        self.expected_progress_curves = "[([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.51, 0.63, 0.69, 0.75, 0.81, 0.87, 0.99, 1.0], [1.0, 0.3606996168665627, 0.3312311712714562, 0.3073268801646951, 0.22588351993771083, 0.20801056063983267, 0.19199617821546802, 0.17859922654557808, 0.16616608044569012, 0.06156911772740796, 0.05064104583718488, 0.009333788240311905, -0.0, -0.0]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.51, 0.57, 0.63, 0.69, 0.75, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.8401749042166412, 0.8107064586228799, 0.5955678386591878, 0.5955678386591878, 0.524076001465279, 0.46001847176837807, 0.44545388678054365, 0.43205693511159404, 0.43205693511159404, 0.32745997239205815, 0.31653190050183505, 0.3062050861027094, 0.2964051597244815, 0.21240106556686528, 0.21240106556686528]), ([0.0, 1.0], [1.0, 1.0]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.51, 0.57, 0.63, 0.75, 0.81, 0.99, 1.0], [1.0, 0.8401749042166412, 0.8107064586228799, 0.7868021675159298, 0.7053588072899437, 0.6874858479911677, 0.6714714655669417, 0.6132131256176324, 0.599816173947973, 0.4952192112284394, 0.4515069236675437, 0.44217313542826975, 0.44217313542826975]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.51, 0.57, 0.75, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.8401749042166412, 0.8107064586228799, 0.7868021675163102, 0.7664413274602293, 0.7485683681623506, 0.6845108384651754, 0.6699462534774671, 0.6234587144919828, 0.5797464269306872, 0.5694196125315638, 0.5596196861531543, 0.5596196861531543, 0.5596196861531543]), ([0.0, 0.21, 0.27, 0.33, 0.45, 0.51, 0.57, 0.63, 0.69, 0.75, 0.81, 0.87, 0.93, 1.0], [1.0, 0.9600437260521728, 0.8421699436726383, 0.746552779243697, 0.5856961455533718, 0.521638615858649, 0.46338027590933856, 0.4097924692325873, 0.3973593231326993, 0.35087178414679715, 0.25251913713596363, 0.21121187953833773, 0.20141195315992472, 0.20141195315992472]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.51, 0.63, 0.69, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9600437260521728, 0.8421699436726383, 0.7465527792459751, 0.6651094190193252, 0.6490950365949628, 0.5955072299177414, 0.5457746455164327, 0.5348465736260086, 0.5245197592268852, 0.5147198328493773, 0.47738467989089944, 0.47738467989089944]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.57, 0.69, 0.75, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9200874521043456, 0.8611505609116479, 0.8133419786959368, 0.8031615586673084, 0.7942250790174001, 0.7869427865236271, 0.730993629070194, 0.7077498595754618, 0.7077498595754618, 0.6870962307763757, 0.6086968197468089, 0.5900292432666404, 0.5900292432666404]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.51, 0.57, 0.63, 0.69, 0.75, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9467249680701942, 0.9074337072753773, 0.8994656102396152, 0.8926786635539442, 0.8713261536541655, 0.866471291991374, 0.8620056414348848, 0.8454281133004838, 0.8415541517180405, 0.8381118802515364, 0.8348452381252448, 0.8348452381252448, 0.8348452381252448]), ([0.0, 0.21, 0.27, 0.45, 0.51, 0.57, 0.63, 0.69, 0.75, 0.87, 0.93, 0.99, 1.0], [1.0, 0.8801311781565184, 0.7917258413709878, 0.7678952289715192, 0.7625571014965736, 0.7577022398338218, 0.7175113848247356, 0.7175113848247356, 0.7136374232423229, 0.7136374232423229, 0.7103707811160621, 0.7103707811160621, 0.7103707811160621]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.63, 0.69, 0.75, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9600437260521728, 0.9305752804570657, 0.9305752804570657, 0.8491319202314136, 0.8312589609326348, 0.8178620092628608, 0.8054288631628649, 0.7589413241771683, 0.7480132522868452, 0.7067059946905406, 0.6675062891768954, 0.6581725009376215, 0.6581725009376215]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.51, 0.57, 0.63, 0.69, 0.75, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9800218630250939, 0.9652876402269177, 0.917479058011397, 0.7545923375509973, 0.718846418952411, 0.7108392277403098, 0.7035569352459043, 0.6968584594107435, 0.6719921672088514, 0.648748397714742, 0.6268922539332068, 0.6268922539332068, 0.5827925852284329, 0.5081222793077638, 0.5081222793077638]), ([0.0, 1.0], [1.0, 1.0]), ([0.0, 1.0], [1.0, 1.0]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.51, 0.57, 0.63, 0.69, 0.75, 0.81, 0.93, 1.0], [1.0, 0.9900109315125447, 0.9826438201134586, 0.9587395290056051, 0.9536493189913309, 0.935776359691965, 0.9317727640859143, 0.9172081790979271, 0.9038112274280128, 0.9007029409028596, 0.897797469716015, 0.8868693978251991, 0.8844194162305183, 0.8844194162305183]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.57, 0.69, 0.75, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9600437260521728, 0.8421699436726383, 0.6270313237095164, 0.6066704836521029, 0.5921058986640197, 0.5423733142627088, 0.5307514295166489, 0.519823357626427, 0.5094965432274898, 0.4996966168490768, 0.4903628286091135, 0.4903628286091135]), ([0.0, 1.0], [1.0, 1.0]), ([0.0, 0.21, 0.33, 0.39, 0.57, 0.63, 0.69, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9600437260521728, 0.9361394349454129, 0.8546960747194262, 0.8401314897315952, 0.8267345380618212, 0.8143013919612728, 0.803373320071048, 0.7930465056721109, 0.753846800158649, 0.604506188322311, 0.604506188322311]), ([0.0, 1.0], [1.0, 1.0]), ([0.0, 1.0], [1.0, 1.0]), ([0.0, 1.0], [1.0, 1.0]), ([0.0, 0.21, 0.39, 0.45, 0.51, 0.57, 0.63, 0.69, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9800218630250224, 0.9393001829096927, 0.9035542643096398, 0.8715254994604363, 0.8642432069666345, 0.8374493036267138, 0.8312327305761082, 0.8257686946310518, 0.8257686946310518, 0.8208687314415858, 0.8022011549613492, 0.8022011549613492]), ([0.0, 0.21, 0.27, 0.33, 0.39, 0.45, 0.51, 0.57, 0.63, 0.69, 0.75, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9866812420168858, 0.9768584268187437, 0.9688903297828549, 0.9417425430399419, 0.935784889940123, 0.93044676246509, 0.93044676246509, 0.9125841602386723, 0.8960066321047869, 0.8921326705224134, 0.888690399055878, 0.8854237569296132, 0.8823124941828149, 0.8823124941828149]), ([0.0, 0.21, 0.27, 0.33, 0.51, 0.57, 0.63, 0.69, 0.75, 0.81, 0.87, 0.93, 0.99, 1.0], [1.0, 0.9200874521043456, 0.9053532293060588, 0.8575446470894006, 0.849537455876956, 0.8204082859007257, 0.8204082859007257, 0.8141917128504188, 0.8083807704768421, 0.7865246266954028, 0.781361219495397, 0.7764612563059475, 0.7764612563059475, 0.7764612563059475])]"

        # Convert the expected values from string to their actual types
        self.expected_all_recommended_xs = eval(self.expected_all_recommended_xs, {'nan': float('nan'), 'inf': float('inf')})
        self.expected_all_intermediate_budgets = eval(self.expected_all_intermediate_budgets, {'nan': float('nan'), 'inf': float('inf')})
        self.expected_all_est_objectives = eval(self.expected_all_est_objectives, {'nan': float('nan'), 'inf': float('inf')})
        self.expected_objective_curves = eval(self.expected_objective_curves, {'nan': float('nan'), 'inf': float('inf')})
        self.expected_progress_curves = eval(self.expected_progress_curves, {'nan': float('nan'), 'inf': float('inf')})
        
        # Number of macro-replications and post-replications
        self.num_macroreps = 24
        self.num_postreps = 200

        # Setup the solver and experiment
        self.myexperiment = ProblemSolver(self.expected_solver_name, self.expected_problem_name)
        self.assertEqual(self.myexperiment.solver.name, self.expected_solver_name, "Solver name does not match (expected: " + self.expected_solver_name + ", actual: " + self.myexperiment.solver.name + ")")
        self.assertEqual(self.myexperiment.problem.name, self.expected_problem_name, "Problem name does not match (expected: " + self.expected_problem_name + ", actual: " + self.myexperiment.problem.name + ")")

    def test_run(self):
        # Check actual run results against expected
        self.myexperiment.run(n_macroreps=self.num_macroreps)
        self.assertEqual(self.myexperiment.n_macroreps, self.num_macroreps, "Number of macro-replications for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " does not match.")
        # For each macroreplication
        for mrep in range(self.num_macroreps):
            # Check to make sure the list lengths are the same
            self.assertEqual(len(self.myexperiment.all_recommended_xs[mrep]), len(self.expected_all_recommended_xs[mrep]), "Length of recommended solutions for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match.")
            # For each list of recommended solutions
            for list in range(len(self.myexperiment.all_recommended_xs[mrep])):
                # Check to make sure the tuples are the same length
                self.assertEqual(len(self.myexperiment.all_recommended_xs[mrep][list]), len(self.expected_all_recommended_xs[mrep][list]), "Recommended solutions for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(list) + ".")
                # For each tuple of recommended solutions
                for tuple in range(len(self.myexperiment.all_recommended_xs[mrep][list])):
                    self.assertAlmostEqual(self.myexperiment.all_recommended_xs[mrep][list][tuple], self.expected_all_recommended_xs[mrep][list][tuple], 5, "Recommended solutions for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(list) + " and tuple " + str(tuple) + ".")
            # Check to make sure the list lengths are the same
            self.assertEqual(len(self.myexperiment.all_intermediate_budgets[mrep]), len(self.expected_all_intermediate_budgets[mrep]), "Length of intermediate budgets for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match.")
            # For each list of intermediate budgets
            for list in range(len(self.myexperiment.all_intermediate_budgets[mrep])):
                # Check the values in the list
                self.assertAlmostEqual(self.myexperiment.all_intermediate_budgets[mrep][list], self.expected_all_intermediate_budgets[mrep][list], 5, "Intermediate budgets for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(list) + ".")
            
    def test_post_replicate(self):
        # Simulate results from the run method
        self.myexperiment = ProblemSolver(self.expected_solver_name, self.expected_problem_name)
        self.myexperiment.n_macroreps = self.num_macroreps
        self.myexperiment.all_recommended_xs = self.expected_all_recommended_xs
        self.myexperiment.all_intermediate_budgets = self.expected_all_intermediate_budgets

        # Check actual post-replication results against expected
        self.myexperiment.post_replicate(n_postreps=self.num_postreps)
        self.assertEqual(self.myexperiment.n_postreps, self.num_postreps, "Number of post-replications for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " does not match.")
        # For each macroreplication
        for mrep in range(self.num_macroreps):
            # Check to make sure the list lengths are the same
            self.assertEqual(len(self.myexperiment.all_est_objectives[mrep]), len(self.expected_all_est_objectives[mrep]), "Estimated objectives for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match.")
            # For each list in the estimated objectives
            for list in range(len(self.myexperiment.all_est_objectives[mrep])):
                # Check the values in the list
                self.assertAlmostEqual(self.myexperiment.all_est_objectives[mrep][list], self.expected_all_est_objectives[mrep][list], 5, "Estimated objectives for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(list) + ".")

    def test_post_normalize(self):
        # Simulate results from the post_replicate method
        self.myexperiment = ProblemSolver(self.expected_solver_name, self.expected_problem_name)
        self.myexperiment.n_macroreps = self.num_macroreps
        self.myexperiment.n_postreps = self.num_postreps
        self.myexperiment.all_recommended_xs = self.expected_all_recommended_xs
        self.myexperiment.all_intermediate_budgets = self.expected_all_intermediate_budgets
        self.myexperiment.all_est_objectives = self.expected_all_est_objectives
        self.myexperiment.has_run = True
        self.myexperiment.has_postreplicated= True
        # Check actual post-normalization results against expected
        post_normalize([self.myexperiment], n_postreps_init_opt=self.num_postreps)

        # Loop through each curve object and convert it into a tuple
        for i in range(len(self.myexperiment.objective_curves)):
            self.myexperiment.objective_curves[i] = (self.myexperiment.objective_curves[i].x_vals, self.myexperiment.objective_curves[i].y_vals)
        for i in range(len(self.myexperiment.progress_curves)):
            self.myexperiment.progress_curves[i] = (self.myexperiment.progress_curves[i].x_vals, self.myexperiment.progress_curves[i].y_vals)

        for mrep in range(self.num_macroreps):
            # Check to make sure the same number of objective curves are present
            # This should probably always be 2 (x and y)
            self.assertEqual(len(self.myexperiment.objective_curves[mrep]), len(self.expected_objective_curves[mrep]), "Number of objective curves for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " does not match.")
            # Make sure that curves are only checked if they exist
            if (len(self.myexperiment.objective_curves[mrep]) > 0):
                # Make sure the lengths of the X and Y values are the same
                self.assertEqual(len(self.myexperiment.objective_curves[mrep][0]), len(self.expected_objective_curves[mrep][0]), "Length of X values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match.")
                self.assertEqual(len(self.myexperiment.objective_curves[mrep][1]), len(self.expected_objective_curves[mrep][1]), "Length of Y values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match.")
                # Check X (0) and Y (1) values
                for x_index in range(len(self.myexperiment.objective_curves[mrep][0])):
                    # If the value is NaN, make sure we're expecting NaN
                    if (math.isnan(self.myexperiment.objective_curves[mrep][0][x_index])):
                        self.assertTrue(math.isnan(self.expected_objective_curves[mrep][0][x_index]), "X values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(x_index) + ".")
                    # Otherwise, check the value normally
                    else:
                        self.assertAlmostEqual(self.myexperiment.objective_curves[mrep][0][x_index], self.expected_objective_curves[mrep][0][x_index], 5, "X values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(x_index) + ".")
                for y_index in range(len(self.myexperiment.objective_curves[mrep][1])):
                    # If the value is NaN, make sure we're expecting NaN
                    if (math.isnan(self.myexperiment.objective_curves[mrep][1][y_index])):
                        self.assertTrue(math.isnan(self.expected_objective_curves[mrep][1][y_index]), "Y values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(y_index) + ".")
                    # Otherwise, check the value normally
                    else:
                        self.assertAlmostEqual(self.myexperiment.objective_curves[mrep][1][y_index], self.expected_objective_curves[mrep][1][y_index], 5, "Y values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(y_index) + ".")
            
            # Check to make sure the same number of progress curves are present
            # This should probably always be 2 (x and y)
            self.assertEqual(len(self.myexperiment.progress_curves[mrep]), len(self.expected_progress_curves[mrep]), "Number of progress curves for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " does not match.")
            # Make sure that curves are only checked if they exist
            if (len(self.myexperiment.progress_curves[mrep]) > 0):
                # Make sure the lengths of the X and Y values are the same
                self.assertEqual(len(self.myexperiment.progress_curves[mrep][0]), len(self.expected_progress_curves[mrep][0]), "Length of X values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match.")
                self.assertEqual(len(self.myexperiment.progress_curves[mrep][1]), len(self.expected_progress_curves[mrep][1]), "Length of Y values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match.")
                # Check X (0) and Y (1) values
                for x_index in range(len(self.myexperiment.progress_curves[mrep][0])):
                    # If the value is NaN, make sure we're expecting NaN
                    if (math.isnan(self.myexperiment.progress_curves[mrep][0][x_index])):
                        self.assertTrue(math.isnan(self.expected_progress_curves[mrep][0][x_index]), "X values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(x_index) + ".")
                    # Otherwise, check the value normally
                    else:
                        self.assertAlmostEqual(self.myexperiment.progress_curves[mrep][0][x_index], self.expected_progress_curves[mrep][0][x_index], 5, "X values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(x_index) + ".")
                for y_index in range(len(self.myexperiment.progress_curves[mrep][1])):
                    # If the value is NaN, make sure we're expecting NaN
                    if (math.isnan(self.myexperiment.progress_curves[mrep][1][y_index])):
                        self.assertTrue(math.isnan(self.expected_progress_curves[mrep][1][y_index]), "Y values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(y_index) + ".")
                    # Otherwise, check the value normally
                    else:
                        self.assertAlmostEqual(self.myexperiment.progress_curves[mrep][1][y_index], self.expected_progress_curves[mrep][1][y_index], 5, "Y values for problem " + self.expected_problem_name + " and solver " + self.expected_solver_name + " do not match at mrep " + str(mrep) + " and index " + str(y_index) + ".")      
